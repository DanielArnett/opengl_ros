<?xml version="1.0"?>
<launch>
  <arg name="device"    default="/dev/video0"/>
  <arg name="width"     default="640"/>
  <arg name="height"    default="480"/>
  <arg name="framerate" default="15"/>

  <!--node pkg="usb_cam" type="usb_cam_node" name="usb_cam" output="screen">
    <param name="video_device"    value="$(arg device)"/>
    <param name="image_width"     value="$(arg width)"/>
    <param name="image_height"    value="$(arg height)"/>
    <param name="framerate"       value="$(arg framerate)"/>
    <param name="pixel_format"    value="yuyv"/>
    <param name="camera_frame_id" value="usb_cam"/>
    <param name="io_method"       value="mmap"/>

    <remap from="/usb_cam/image_raw" to="/image_in"/>
  </node-->

  <node pkg="opengl_ros" type="make_half_transparent"
    name="make_half_transparent" output="screen">
    <param name="width"           value="$(arg width)"/>
    <param name="height"          value="$(arg height)"/>
    <param name="vertex_shader"   value="$(find opengl_ros_lib)/shader/vs_passthrough.glsl"/>
    <param name="fragment_shader" value="$(find opengl_ros)/shader/make_half_transparent.glsl"/>
    <param name="x"    value="0.3"/>
    <param name="y"    value="0.3"/>

    <remap from="image_out" to="/image_in"/>
  </node>

  <node pkg="opengl_ros" type="make_half_transparent"
    name="second_circle" output="screen">
    <param name="width"           value="$(arg width)"/>
    <param name="height"          value="$(arg height)"/>
    <param name="vertex_shader"   value="$(find opengl_ros_lib)/shader/vs_passthrough.glsl"/>
    <param name="fragment_shader" value="$(find opengl_ros)/shader/make_half_transparent.glsl"/>
    <param name="x"    value="0.7"/>
    <param name="y"    value="0.7"/>

    <remap from="image_out" to="/second_image_in"/>
  </node>

  <node pkg="opengl_ros" type="blend_images"
    name="blended_image" output="screen">
    <param name="width"           value="$(arg width)"/>
    <param name="height"          value="$(arg height)"/>
    <param name="vertex_shader"   value="$(find opengl_ros_lib)/shader/vs_passthrough.glsl"/>
    <param name="fragment_shader" value="$(find opengl_ros)/shader/blend_images.glsl"/>

    <remap from="/first_image" to="/image_in"/>
    <remap from="/second_image" to="/second_image_in"/>
    <remap from="image_out" to="/blended_image"/>
  </node>

  <!--node pkg="opengl_ros" type="check_transparency"
    name="check_transparency" output="screen">
    <param name="width"           value="$(arg width)"/>
    <param name="height"          value="$(arg height)"/>
    <param name="vertex_shader"   value="$(find opengl_ros_lib)/shader/vs_passthrough.glsl"/>
    <param name="fragment_shader" value="$(find opengl_ros)/shader/check_transparency.glsl"/>

    <remap from="image_in"  to="first_image"/>
    <remap from="image_out" to="/transparency_check"/>
  </node-->

  <node pkg="image_view" type="image_view" name="viewer_out">
    <remap from="image" to="/image_in"/>
    <param name="window_name" value="First Output"/>
  </node>

  <node pkg="image_view" type="image_view" name="second_circle_viewer">
    <remap from="image" to="/second_image_in"/>
    <param name="window_name" value="Second Output"/>
  </node>

  <node pkg="image_view" type="image_view" name="blended_viewer">
    <remap from="image" to="/blended_image"/>
    <param name="window_name" value="Blended Output"/>
  </node>

  <!--node pkg="image_view" type="image_view" name="view_transparency_check">
    <remap from="image" to="/transparency_check"/>
    <param name="window_name" value="Transparency Check"/>
  </node-->
</launch>
